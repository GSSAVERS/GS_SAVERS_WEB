// script.js

// Fun√ß√£o para fazer scroll suave ao clicar em cada item do menu
function inicializarMenu() {
  const links = document.querySelectorAll(".nav-menu a");

  links.forEach((link) => {
    link.addEventListener("click", (event) => {
      event.preventDefault();
      const destino = link.getAttribute("data-target");
      const secaoAlvo = document.getElementById(destino);

      if (secaoAlvo) {
        secaoAlvo.scrollIntoView({
          behavior: "smooth",
          block: "start",
        });
      }
    });
  });
}

document.addEventListener("DOMContentLoaded", () => {
  inicializarMenu();
});

// ---------------------------
// Alternar Tema Claro/Escuro
// ---------------------------
const btnTema = document.getElementById("theme-toggle");
const body = document.body;

// Se o usu√°rio j√° tiver salvo ‚Äúmodo-escuro = ativo‚Äù, ligamos automaticamente
if (localStorage.getItem("modo-escuro") === "ativo") {
  body.classList.add("dark-mode");
  btnTema.textContent = "‚òÄÔ∏è";
}

btnTema.addEventListener("click", () => {
  body.classList.toggle("dark-mode");

  if (body.classList.contains("dark-mode")) {
    btnTema.textContent = "‚òÄÔ∏è";
    localStorage.setItem("modo-escuro", "ativo");
  } else {
    btnTema.textContent = "üåô";
    localStorage.setItem("modo-escuro", "inativo");
  }
});
// =============================
// DADOS DO QUIZ (10 perguntas)
// Cada objeto: { question: "", options: [...], correctIndex: n }
// Informa√ß√µes retiradas de: QuizGecko ‚ÄúFlood Quiz‚Äù :contentReference[oaicite:0]{index=0}
const quizData = [
  {
    question: "1. O que √© uma plan√≠cie de inunda√ß√£o (floodplain)?",
    options: [
      "Uma regi√£o propensa a terremotos e deslizamentos",
      "Uma √°rea alta adjacente a um corpo d‚Äô√°gua que raramente inunda",
      "Uma √°rea baixa adjacente a um corpo d‚Äô√°gua que frequentemente inunda", // correto :contentReference[oaicite:1]{index=1}
      "Uma √°rea distante de qualquer corpo d‚Äô√°gua"
    ],
    correctIndex: 2
  },
  {
    question: "2. Qual √© a principal causa de inunda√ß√µes durante tempestades tropicais e furac√µes?",
    options: [
      "Chuvas excessivas",               // correto :contentReference[oaicite:2]{index=2}
      "Falhas em infraestrutura (diques, represas)",
      "Derretimento de neve",
      "Transbordamento de rios"
    ],
    correctIndex: 0
  },
  {
    question: "3. Qual infraestrutura √© constru√≠da ao redor de corpos d‚Äô√°gua para elevar suas margens e prevenir inunda√ß√µes?",
    options: [
      "Barragem",
      "Dique (levee)",                   // correto :contentReference[oaicite:3]{index=3}
      "Canal",
      "Reservat√≥rio"
    ],
    correctIndex: 1
  },
  {
    question: "4. Qual foi a tempestade tropical mais cara da hist√≥ria dos Estados Unidos?",
    options: [
      "Tropical Storm Allison",         // correto :contentReference[oaicite:4]{index=4}
      "Furac√£o Katrina",
      "Furac√£o Sandy",
      "Tempestade Tropical Harvey"
    ],
    correctIndex: 0
  },
  {
    question: "5. O que √© uma ‚Äòstorm surge‚Äô?",
    options: [
      "Uma eleva√ß√£o r√°pida do n√≠vel do mar durante uma tempestade", // correto :contentReference[oaicite:5]{index=5}
      "Uma queda repentina de press√£o atmosf√©rica",
      "Um evento de vento forte",
      "Um tipo de inunda√ß√£o repentina (‚Äòflash flood‚Äô)"
    ],
    correctIndex: 0
  },
  {
    question: "6. Qual √© a caracter√≠stica definidora de uma inunda√ß√£o repentina (‚Äòflash flood‚Äô)?",
    options: [
      "Eleva√ß√£o r√°pida do n√≠vel da √°gua",                            // correto :contentReference[oaicite:6]{index=6}
      "Inunda√ß√£o lenta e sustentada",
      "Mar√©s altas combinadas com chuva",
      "Transbordamento de √°gua subterr√¢nea"
    ],
    correctIndex: 0
  },
  {
    question: "7. De que tipo de √°gua as inunda√ß√µes podem ser compostas?",
    options: [
      "√Ågua doce",
      "√Ågua salgada",
      "√Ågua salobra",                                                 // correto :contentReference[oaicite:7]{index=7}
      "Todas as anteriores"
    ],
    correctIndex: 2
  },
  {
    question: "8. Quais fatores podem levar ao transbordamento de rios (river flooding)?",
    options: [
      "Chuvas intensas",
      "Derretimento de neve",                                         // correto :contentReference[oaicite:8]{index=8}
      "Falhas em represas",
      "Todas as anteriores"
    ],
    correctIndex: 3
  },
  {
    question: "9. Qual tipo de inunda√ß√£o frequentemente traz excelentes benef√≠cios agr√≠colas?",
    options: [
      "Inunda√ß√£o de rios (river flooding)",                           // correto :contentReference[oaicite:9]{index=9}
      "Inunda√ß√£o urbana",
      "Inunda√ß√£o costeira",
      "Inunda√ß√£o repentina (‚Äòflash flood‚Äô)"
    ],
    correctIndex: 0
  },
  {
    question: "10. Qual √© o conceito de inunda√ß√£o subterr√¢nea (groundwater flooding)?",
    options: [
      "Eleva√ß√£o r√°pida do n√≠vel da mar√©",
      "Evapora√ß√£o excessiva",
      "Transbordamento de rios",
      "Aumento do n√≠vel da √°gua abaixo do solo"                      // correto :contentReference[oaicite:10]{index=10}
    ],
    correctIndex: 3
  }
];

// √çNDICES e estado atual
let currentQuestionIndex = 0;
let userAnswers = new Array(quizData.length).fill(null);

// Seletores
const quizContainer = document.getElementById("quiz-container");
const prevBtn = document.getElementById("prev-btn");
const nextBtn = document.getElementById("next-btn");
const submitBtn = document.getElementById("submit-btn");
const quizResult = document.getElementById("quiz-result");
const scoreSpan = document.getElementById("score");

// Fun√ß√£o para renderizar a pergunta atual
function renderQuestion() {
  // Limpa o container
  quizContainer.innerHTML = "";

  const qObj = quizData[currentQuestionIndex];
  const questionEl = document.createElement("div");
  questionEl.classList.add("quiz-question");
  questionEl.innerHTML = `<p>${qObj.question}</p>`;

  const optionsList = document.createElement("ul");
  optionsList.classList.add("quiz-options");

  qObj.options.forEach((opt, idx) => {
    const li = document.createElement("li");
    li.innerHTML = `
      <label>
        <input type="radio" name="option" value="${idx}"
          ${userAnswers[currentQuestionIndex] === idx ? "checked" : ""} />
        ${opt}
      </label>
    `;
    optionsList.appendChild(li);
  });

  quizContainer.append(questionEl, optionsList);

  // Ajusta exibi√ß√£o dos bot√µes
  prevBtn.disabled = currentQuestionIndex === 0;
  nextBtn.style.display = currentQuestionIndex === quizData.length - 1 ? "none" : "inline-block";
  submitBtn.style.display = currentQuestionIndex === quizData.length - 1 ? "inline-block" : "none";
}

// Atualiza resposta selecionada pelo usu√°rio no array
quizContainer.addEventListener("change", (e) => {
  if (e.target.name === "option") {
    userAnswers[currentQuestionIndex] = parseInt(e.target.value);
  }
});

// Bot√£o ‚ÄúAnterior‚Äù
prevBtn.addEventListener("click", () => {
  if (currentQuestionIndex > 0) {
    currentQuestionIndex--;
    renderQuestion();
  }
});

// Bot√£o ‚ÄúPr√≥xima‚Äù
nextBtn.addEventListener("click", () => {
  if (currentQuestionIndex < quizData.length - 1) {
    currentQuestionIndex++;
    renderQuestion();
  }
});

// Bot√£o ‚ÄúEnviar‚Äù (ap√≥s a √∫ltima pergunta)
submitBtn.addEventListener("click", () => {
  let correctCount = 0;
  quizData.forEach((q, idx) => {
    if (userAnswers[idx] === q.correctIndex) {
      correctCount++;
    }
  });
  scoreSpan.textContent = `${correctCount}`;
  quizResult.style.display = "block";
  // Esconde controles para n√£o interferir ap√≥s enviar
  prevBtn.style.display = "none";
  nextBtn.style.display = "none";
  submitBtn.style.display = "none";
});

// Quando a p√°gina carrega, renderiza a primeira pergunta
document.addEventListener("DOMContentLoaded", () => {
  renderQuestion();
});
